"""Copybara project to sync golden reports in Chromium src to aggregate-service repo.

To sync with source
cobybara copy.bara.sky chrome_to_gob --force
"""
origin = git.origin(
    url = "rpc://chromium/chromium/src",
    ref = "main",
    partial_fetch = True,
)
destination = git.gerrit_destination(
    url = "rpc://team/aggregate-service",
    fetch = "main",
    push_to_refs_for = "main",
)

# Copybara cannot copy public/private keys so excludes them. Excludes README as it is not relevant.
golden_files = glob(
    ["content/test/data/attribution_reporting/aggregatable_report_goldens/**"],
    exclude = [
        "content/test/data/attribution_reporting/aggregatable_report_goldens/**/public_key.json",
        "content/test/data/attribution_reporting/aggregatable_report_goldens/**/private_key.txt",
        "content/test/data/attribution_reporting/aggregatable_report_goldens/README.md",
    ],
)
_authoring = authoring.overwrite("Potassium Engprod <potassium-engprod@google.com>")
core.workflow(
    name = "chrome_to_gob",
    origin = origin,
    destination = destination,
    origin_files = golden_files,
    destination_files = glob(["javatests/testData/aggregatable_report_goldens/**"]),
    mode = "SQUASH",
    authoring = _authoring,
    transformations = [
        core.move(
            "content/test/data/attribution_reporting/aggregatable_report_goldens/",
            "javatests/testData/aggregatable_report_goldens/",
        ),
    ],
)
