#!/bin/bash

set -o pipefail
set -o errexit
set -o xtrace

usage() {
  local exitval=${1-1}
  cat >&2 << USAGE
usage:
  $0
USAGE
  exit ${exitval}
}

while [[ $# -gt 0 ]]; do
  case "$1" in
    -h | --help)
      usage 0
      break
      ;;
    *)
      usage
      break
      ;;
  esac
done

CURL="curl -fsSL"

function apt_update() {
  apt-get --quiet -o 'Acquire::https::No-Cache=True' -o 'Acquire::http::No-Cache=True' update
}

function install_python() {
  apt-get --quiet install -y python3.8-venv="3.8.10-0ubuntu1~20.04.5"
}

function install_misc() {
  DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC \
    apt-get --quiet install -y lsb-release apt-transport-https ca-certificates wget curl gnupg software-properties-common unzip
}

function install_golang() {
  local VERSION=1.19
  local FNAME=gobin.tar.gz
  ${CURL} -o ${FNAME} https://go.dev/dl/go${VERSION}.linux-amd64.tar.gz
  echo "464b6b66591f6cf055bc5df90a9750bf5fbc9d038722bb84a9d56a2bea974be6 ${FNAME}" | sha256sum -c
  tar --directory /usr/local -xzf ${FNAME}
  rm -f ${FNAME}
  update-alternatives --install /usr/bin/go go /usr/local/go/bin/go 100

  go version
}

function install_clang() {
  local VERSION="11"
  ${CURL} -O https://apt.llvm.org/llvm.sh
  chmod +x llvm.sh
  apt-get --quiet install -y libc++-${VERSION}-dev
  ./llvm.sh ${VERSION}
  update-alternatives --install /usr/bin/clang clang /usr/bin/clang-${VERSION} 100
  rm -f llvm.sh

  clang --version
}

apt_update
install_python
install_misc
install_golang
install_clang
apt-get --quiet autoremove -y
